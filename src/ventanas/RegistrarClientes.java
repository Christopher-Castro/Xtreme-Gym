/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import SecuGen.FDxSDKPro.jni.*;
import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.sql.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;

/**
 *
 * @author Ernesto
 */
public class RegistrarClientes extends javax.swing.JFrame {
    
    String user;
    private long deviceName;
    private long devicePort;
    private JSGFPLib fplib = null;  
    private long ret;
    private boolean bLEDOn;
    private byte[] regMin1 = new byte[400];
    private byte[] regMin2 = new byte[400];
    private byte[] vrfMin  = new byte[400];
    private byte[] m  = new byte[400];
    private SGDeviceInfoParam deviceInfo = new SGDeviceInfoParam();
    private BufferedImage imgRegistration1;
    private BufferedImage imgRegistration2;
    private BufferedImage imgVerification;
    private boolean r1Captured = false;
    private boolean r2Captured = false;
    private boolean v1Captured = false;
    private static int MINIMUM_QUALITY = 60;       //User defined
    private static int MINIMUM_NUM_MINUTIAE = 20;  //User defined
    private static int MAXIMUM_NFIQ = 2;           //User defined

    /**
     * Creates new form RegistrarClientes
     */
    public RegistrarClientes() {
        initComponents();
        user = Login.user;
        
        setTitle("Registrar nuevo cliente - Sesión de " + user);
        
        setResizable(false);
        setLocationRelativeTo(null);
        setSize(630, 540);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        URL url = Login.class.getResource("/wallpaperPrincipal.jpg");
        ImageIcon wallpaper = new ImageIcon(url);
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(),
                jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();
    }
    
    @Override
    public Image getIconImage() {
        URL url = Login.class.getResource("/icon.png");
        Image retValue = Toolkit.getDefaultToolkit().getImage(url);
        return retValue;
    }

    private void enableRegisterAndVerifyControls()
    {
        if (r1Captured && r2Captured)
            this.jButtonRegister.setEnabled(true);
                   
    }
    private void enableControls()
    {
        
        this.jButtonCaptureR1.setEnabled(true);
        this.jButtonCaptureR2.setEnabled(true);
        
        
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txt_mail = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        jButton = new javax.swing.JButton();
        jLabelRegisterImage1 = new javax.swing.JLabel();
        jLabelRegisterImage2 = new javax.swing.JLabel();
        jLabel_footer = new javax.swing.JLabel();
        jButtonRegister = new javax.swing.JButton();
        jButtonCaptureR1 = new javax.swing.JButton();
        jProgressBarR1 = new javax.swing.JProgressBar();
        jProgressBarR2 = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        jSliderQuality = new javax.swing.JSlider();
        jButtonCaptureR2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxRegisterSecurityLevel = new javax.swing.JComboBox();
        jSliderSeconds = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelVerificationBox = new javax.swing.JLabel();
        jLabelVerifyImage = new javax.swing.JLabel();
        jButtonCaptureV1 = new javax.swing.JButton();
        jButtonVerify = new javax.swing.JButton();
        jProgressBarV1 = new javax.swing.JProgressBar();
        jComboBoxVerifySecurityLevel = new javax.swing.JComboBox();
        jLabelRegistrationBox = new javax.swing.JLabel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(630, 540));
        setPreferredSize(new java.awt.Dimension(630, 540));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registro de clientes");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("em@il:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Teléfono:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dirección:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Registrar cliente:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, -1, -1));

        txt_nombre.setBackground(new java.awt.Color(153, 153, 153));
        txt_nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        jButton1.setLabel("Inicializar sensor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 140, 30));

        txt_mail.setBackground(new java.awt.Color(153, 153, 153));
        txt_mail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_mail.setForeground(new java.awt.Color(255, 255, 255));
        txt_mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_mail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        txt_telefono.setBackground(new java.awt.Color(153, 153, 153));
        txt_telefono.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_telefono.setForeground(new java.awt.Color(255, 255, 255));
        txt_telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        txt_direccion.setBackground(new java.awt.Color(153, 153, 153));
        txt_direccion.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_direccion.setForeground(new java.awt.Color(255, 255, 255));
        txt_direccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_direccion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 210, -1));

        jButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });
        getContentPane().add(jButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 120, 100));

        jLabelRegisterImage1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabelRegisterImage1.setMinimumSize(new java.awt.Dimension(130, 150));
        jLabelRegisterImage1.setPreferredSize(new java.awt.Dimension(130, 150));
        getContentPane().add(jLabelRegisterImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        jLabelRegisterImage2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabelRegisterImage2.setMinimumSize(new java.awt.Dimension(130, 150));
        jLabelRegisterImage2.setPreferredSize(new java.awt.Dimension(130, 150));
        getContentPane().add(jLabelRegisterImage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, -1, -1));

        jLabel_footer.setText("                       Xtreme Gym ®");
        getContentPane().add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        jButtonRegister.setText("Validar muestra");
        jButtonRegister.setActionCommand("jButton1");
        jButtonRegister.setMaximumSize(new java.awt.Dimension(270, 30));
        jButtonRegister.setMinimumSize(new java.awt.Dimension(270, 30));
        jButtonRegister.setPreferredSize(new java.awt.Dimension(270, 30));
        jButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 130, 30));

        jButtonCaptureR1.setActionCommand("jButton1");
        jButtonCaptureR1.setLabel("Capturar R1");
        jButtonCaptureR1.setMaximumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR1.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR1.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCaptureR1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCaptureR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, 30));

        jProgressBarR1.setForeground(new java.awt.Color(0, 51, 153));
        getContentPane().add(jProgressBarR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 130, -1));

        jProgressBarR2.setForeground(new java.awt.Color(0, 51, 153));
        getContentPane().add(jProgressBarR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 130, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Calidad de imagen");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, -1, -1));

        jSliderQuality.setMajorTickSpacing(10);
        jSliderQuality.setMinorTickSpacing(10);
        jSliderQuality.setPaintLabels(true);
        jSliderQuality.setPaintTicks(true);
        jSliderQuality.setName(""); // NOI18N
        getContentPane().add(jSliderQuality, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 160, 45));

        jButtonCaptureR2.setActionCommand("jButton1");
        jButtonCaptureR2.setLabel("Capturar R2");
        jButtonCaptureR2.setMaximumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR2.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR2.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonCaptureR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCaptureR2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCaptureR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 130, 30));

        jLabel8.setText("Nivel de seguridad:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        jComboBoxRegisterSecurityLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LOWEST", "LOWER", "LOW", "BELOW_NORMAL", "NORMAL", "ABOVE_NORMAL", "HIGH", "HIGHER", "HIGHEST" }));
        jComboBoxRegisterSecurityLevel.setSelectedIndex(4);
        getContentPane().add(jComboBoxRegisterSecurityLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 130, 30));

        jSliderSeconds.setMajorTickSpacing(1);
        jSliderSeconds.setMaximum(10);
        jSliderSeconds.setMinimum(1);
        jSliderSeconds.setPaintLabels(true);
        jSliderSeconds.setPaintTicks(true);
        jSliderSeconds.setValue(5);
        getContentPane().add(jSliderSeconds, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 160, 45));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Timeout (segundos)");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, -1, -1));

        jLabelStatus.setText("Click Initialize Button ...");
        jLabelStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabelStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 380, 30));

        jLabelVerificationBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Verification"));
        getContentPane().add(jLabelVerificationBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 60, 160, 340));

        jLabelVerifyImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabelVerifyImage.setMinimumSize(new java.awt.Dimension(130, 150));
        jLabelVerifyImage.setPreferredSize(new java.awt.Dimension(130, 150));
        getContentPane().add(jLabelVerifyImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, -1, -1));

        jButtonCaptureV1.setText("Capture V1");
        jButtonCaptureV1.setActionCommand("jButton1");
        jButtonCaptureV1.setMaximumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureV1.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonCaptureV1.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonCaptureV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCaptureV1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCaptureV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 130, 30));

        jButtonVerify.setText("Verify");
        jButtonVerify.setActionCommand("jButton1");
        jButtonVerify.setMaximumSize(new java.awt.Dimension(130, 30));
        jButtonVerify.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonVerify.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerifyActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVerify, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, 130, 30));

        jProgressBarV1.setForeground(new java.awt.Color(0, 51, 153));
        getContentPane().add(jProgressBarV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 130, -1));

        jComboBoxVerifySecurityLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LOWEST", "LOWER", "LOW", "BELOW_NORMAL", "NORMAL", "ABOVE_NORMAL", "HIGH", "HIGHER", "HIGHEST" }));
        jComboBoxVerifySecurityLevel.setSelectedIndex(4);
        jComboBoxVerifySecurityLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVerifySecurityLevelActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxVerifySecurityLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 130, 20));

        jLabelRegistrationBox.setBackground(new java.awt.Color(204, 204, 204));
        jLabelRegistrationBox.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro de huella dactilar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        getContentPane().add(jLabelRegistrationBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 340, 420));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed

        int validacion = 0;
        String nombre, mail, telefono, direccion;
        
        int[] matchScore = new int[1];
        boolean[] matched = new boolean[1];
        long iError;
        long secuLevel = (long) (this.jComboBoxRegisterSecurityLevel.getSelectedIndex() + 1);
        matched[0] = false;
        iError = fplib.MatchTemplate(regMin1,regMin2, secuLevel, matched);
        
        nombre = txt_nombre.getText().trim();
        mail = txt_mail.getText().trim();
        telefono = txt_telefono.getText().trim();
        direccion = txt_direccion.getText().trim();
        
        if(nombre.equals("")){
            txt_nombre.setBackground(Color.red);
            validacion++;
        }
        if(mail.equals("")){
            txt_mail.setBackground(Color.red);
            validacion++;
        }
        if(telefono.equals("")){
            txt_telefono.setBackground(Color.red);
            validacion++;
        }
        if(direccion.equals("")){
            txt_direccion.setBackground(Color.red);
            validacion++;
        }

        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
        {
            matchScore[0] = 0;
            iError = fplib.GetMatchingScore(regMin1, regMin2, matchScore);
            if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
            {
                if (matched[0]){
                matched[0] = false;    
                
                this.jLabelStatus.setText( "Verificación dactilar completa, similitud: " + matchScore[0]);
                
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement("select huella_id from clientes ");
                    ResultSet rs = pst.executeQuery();

                    while (rs.next()) {
                        m = rs.getBytes("huella_id");
                        iError = fplib.MatchTemplate(m, regMin1, secuLevel, matched);

                        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE){
                            if (matched[0]){

                                this.jLabelStatus.setText( "Cliente ya registrado");
                                matched[0] = false;
                                validacion++;
                                break;
                            } else {

                            }
                        } else {
                            System.out.println("iError");
                        }

                    }

                } catch (SQLException e) {
                    System.err.println("Error durante la validación de nuevo cliente");
                }
                
                }
                else
                this.jLabelStatus.setText( "Verificación dactilar fallida, similitud: " + matchScore[0]);
            } else {
                this.jLabelStatus.setText( "Verificación dactilar fallida, GetMatchingScore() Error : " + iError);
                validacion++;
            }
        } else {
            this.jLabelStatus.setText( "Verificación dactilar fallida, MatchTemplate() Error : " + iError);
            validacion++;
        }
        
        
        if (validacion == 0) {
            
            try {
                
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "insert into clientes values (?,?,?,?,?,?,?)");
                
                pst.setInt(1, 0);
                pst.setString(2, nombre);
                pst.setString(3, mail);
                pst.setString(4, telefono);
                pst.setString(5, direccion);
                pst.setBytes(6, regMin1);
                pst.setString(7, user);
                
                pst.executeUpdate();
                cn.close();
                
                Limpiar();
                
                txt_nombre.setBackground(Color.green);
                txt_mail.setBackground(Color.green);
                txt_telefono.setBackground(Color.green);
                txt_direccion.setBackground(Color.green);
                
                JOptionPane.showMessageDialog(null, "Registro exitoso.");
                this.dispose();
                
            } catch (SQLException e) {
                System.out.println("Error en registrar cliente." + e);
                JOptionPane.showMessageDialog(null, "¡¡ERROR al registrar cliente!!, contacte al administrador.");
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
        }

    }//GEN-LAST:event_jButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fplib = new JSGFPLib();       
        ret = fplib.Init(SGFDxDeviceName.SG_DEV_AUTO);
        if ((fplib != null) && (ret  == SGFDxErrorCode.SGFDX_ERROR_NONE))
        {
            this.jLabelStatus.setText("JSGFPLib Initialization Success");
            ret = fplib.OpenDevice(SGPPPortAddr.AUTO_DETECT);
            if (ret != SGFDxErrorCode.SGFDX_ERROR_NONE)
            {
                this.jLabelStatus.setText("OpenDevice() Success [" + ret + "]");       
                ret = fplib.GetDeviceInfo(deviceInfo);
                if (ret == SGFDxErrorCode.SGFDX_ERROR_NONE)
                {
                    
                    imgRegistration1 = new BufferedImage(deviceInfo.imageWidth, deviceInfo.imageHeight, BufferedImage.TYPE_BYTE_GRAY);
                    imgRegistration2 = new BufferedImage(deviceInfo.imageWidth, deviceInfo.imageHeight, BufferedImage.TYPE_BYTE_GRAY);
                    imgVerification = new BufferedImage(deviceInfo.imageWidth, deviceInfo.imageHeight, BufferedImage.TYPE_BYTE_GRAY);
                    this.enableControls();
                }
                else
                    this.jLabelStatus.setText("GetDeviceInfo() Error [" + ret + "]");                                
            }
            else
                this.jLabelStatus.setText("OpenDevice() Error [" + ret + "]");                                
        }
        else
            this.jLabelStatus.setText("JSGFPLib Initialization Failed");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonCaptureR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCaptureR1ActionPerformed
        int[] quality = new int[1];
        int[] numOfMinutiae = new int[1];
        byte[] imageBuffer1 = ((java.awt.image.DataBufferByte) imgRegistration1.getRaster().getDataBuffer()).getData();
        long iError = SGFDxErrorCode.SGFDX_ERROR_NONE;

        iError = fplib.GetImageEx(imageBuffer1,jSliderSeconds.getValue() * 1000, 0, jSliderQuality.getValue());
        fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality);
        this.jProgressBarR1.setValue(quality[0]);
        SGFingerInfo fingerInfo = new SGFingerInfo();
        fingerInfo.FingerNumber = SGFingerPosition.SG_FINGPOS_LI;
        fingerInfo.ImageQuality = quality[0];
        fingerInfo.ImpressionType = SGImpressionType.SG_IMPTYPE_LP;
        fingerInfo.ViewNumber = 1;

        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
        {
            this.jButtonRegister.setEnabled(false);
            this.jLabelRegisterImage1.setIcon(new ImageIcon(imgRegistration1.getScaledInstance(130,150,Image.SCALE_DEFAULT)));
            if (quality[0] < MINIMUM_QUALITY)
            this.jLabelStatus.setText("GetImageEx() Success [" + ret + "] but image quality is [" + quality[0] + "]. Please try again");
            else
            {

                this.jLabelStatus.setText("GetImageEx() Success [" + ret + "]");

                iError = fplib.CreateTemplate(fingerInfo, imageBuffer1, regMin1);
                if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
                {
                    long nfiqvalue;
                    long ret2 = fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality);
                    nfiqvalue = fplib.ComputeNFIQ(imageBuffer1, deviceInfo.imageWidth, deviceInfo.imageHeight);
                    ret2 = fplib.GetNumOfMinutiae(SGFDxTemplateFormat.TEMPLATE_FORMAT_SG400, regMin1, numOfMinutiae);

                    if ((quality[0] >= MINIMUM_QUALITY) && (nfiqvalue <= MAXIMUM_NFIQ) && (numOfMinutiae[0] >= MINIMUM_NUM_MINUTIAE))
                    {
                        this.jLabelStatus.setText("Reg. Capture 1 PASS QC. Qual[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                        r1Captured = true;
                        this.enableRegisterAndVerifyControls();
                    }
                    else
                    {
                        this.jLabelStatus.setText("Reg. Capture 1 FAIL QC. Quality[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                        this.jButtonRegister.setEnabled(false);
                    }
                }
                else
                this.jLabelStatus.setText("CreateTemplate() Error : " + iError);
            }
        }
        else
        this.jLabelStatus.setText("GetImageEx() Error : " + iError);

    }//GEN-LAST:event_jButtonCaptureR1ActionPerformed

    private void jButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegisterActionPerformed
        int[] matchScore = new int[1];
        boolean[] matched = new boolean[1];
        long iError;
        long secuLevel = (long) (this.jComboBoxRegisterSecurityLevel.getSelectedIndex() + 1);
        matched[0] = false;

        iError = fplib.MatchTemplate(regMin1,regMin2, secuLevel, matched);
        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
        {
            matchScore[0] = 0;
            iError = fplib.GetMatchingScore(regMin1, regMin2, matchScore);

            if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
            {
                if (matched[0]) 
                this.jLabelStatus.setText( "Verificación completa, similitud: " + matchScore[0]);
                else
                this.jLabelStatus.setText( "Verificación fallida, similitud: " + matchScore[0]);

            }
            else
            this.jLabelStatus.setText( "Verificación fallida, GetMatchingScore() Error : " + iError);
        }
        else
        this.jLabelStatus.setText( "Verificación fallida, MatchTemplate() Error : " + iError);
    }//GEN-LAST:event_jButtonRegisterActionPerformed

    private void jButtonCaptureR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCaptureR2ActionPerformed
        int[] quality = new int[1];
        int[] numOfMinutiae = new int[1];
        byte[] imageBuffer1 = ((java.awt.image.DataBufferByte) imgRegistration2.getRaster().getDataBuffer()).getData();
        long iError = SGFDxErrorCode.SGFDX_ERROR_NONE;
         
        iError = fplib.GetImageEx(imageBuffer1,jSliderSeconds.getValue() * 1000, 0, jSliderQuality.getValue());       
        fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality); 
        this.jProgressBarR2.setValue(quality[0]);
        SGFingerInfo fingerInfo = new SGFingerInfo();
        fingerInfo.FingerNumber = SGFingerPosition.SG_FINGPOS_LI;
        fingerInfo.ImageQuality = quality[0];
        fingerInfo.ImpressionType = SGImpressionType.SG_IMPTYPE_LP;
        fingerInfo.ViewNumber = 1;

        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
        {            
            this.jLabelRegisterImage2.setIcon(new ImageIcon(imgRegistration2.getScaledInstance(130,150,Image.SCALE_DEFAULT)));
            if (quality[0] < MINIMUM_QUALITY)
                this.jLabelStatus.setText("GetImageEx() Success [" + ret + "] but image quality is [" + quality[0] + "]. Please try again"); 
            else
            {            
                this.jLabelStatus.setText("GetImageEx() Success [" + ret + "]"); 

                iError = fplib.CreateTemplate(fingerInfo, imageBuffer1, regMin2);
                if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
                {

                   long nfiqvalue;        
                   long ret2 = fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality);
                   nfiqvalue = fplib.ComputeNFIQ(imageBuffer1, deviceInfo.imageWidth, deviceInfo.imageHeight);
                   ret2 = fplib.GetNumOfMinutiae(SGFDxTemplateFormat.TEMPLATE_FORMAT_SG400, regMin2, numOfMinutiae);
                   if ((quality[0] >= MINIMUM_QUALITY) && (nfiqvalue <= MAXIMUM_NFIQ) && (numOfMinutiae[0] >= MINIMUM_NUM_MINUTIAE))
                   { 
                      this.jLabelStatus.setText("Reg. Capture 2 PASS QC. Qual[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                      r2Captured = true;
                      this.enableRegisterAndVerifyControls();
                   }
                   else
                   {
                      this.jLabelStatus.setText("Reg. Capture 2 FAIL QC. Quality[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                      this.jButtonRegister.setEnabled(false);
                   }

                }
                else
                   this.jLabelStatus.setText("CreateTemplate() Error : " + iError);
            }
         }
         else
            this.jLabelStatus.setText("GetImageEx() Error : " + iError);
        
        
    }//GEN-LAST:event_jButtonCaptureR2ActionPerformed

    private void jComboBoxVerifySecurityLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVerifySecurityLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVerifySecurityLevelActionPerformed

    private void jButtonCaptureV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCaptureV1ActionPerformed
        int[] quality = new int[1];
        int[] numOfMinutiae = new int[1];
        byte[] imageBuffer1 = ((java.awt.image.DataBufferByte) imgVerification.getRaster().getDataBuffer()).getData();
        long iError = SGFDxErrorCode.SGFDX_ERROR_NONE;

        iError = fplib.GetImageEx(imageBuffer1,jSliderSeconds.getValue() * 1000, 0, jSliderQuality.getValue());
        fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality);
        this.jProgressBarV1.setValue(quality[0]);
        SGFingerInfo fingerInfo = new SGFingerInfo();
        fingerInfo.FingerNumber = SGFingerPosition.SG_FINGPOS_LI;
        fingerInfo.ImageQuality = quality[0];
        fingerInfo.ImpressionType = SGImpressionType.SG_IMPTYPE_LP;
        fingerInfo.ViewNumber = 1;

        if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
        {
            this.jLabelVerifyImage.setIcon(new ImageIcon(imgVerification.getScaledInstance(130,150,Image.SCALE_DEFAULT)));
            if (quality[0] < MINIMUM_QUALITY)
            this.jLabelStatus.setText("GetImageEx() Success [" + ret + "] but image quality is [" + quality[0] + "]. Please try again");
            else
            {
                this.jLabelStatus.setText("GetImageEx() Success [" + ret + "]");

                iError = fplib.CreateTemplate(fingerInfo, imageBuffer1, vrfMin);
                if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE)
                {
                    long nfiqvalue;
                    long ret2 = fplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer1, quality);
                    nfiqvalue = fplib.ComputeNFIQ(imageBuffer1, deviceInfo.imageWidth, deviceInfo.imageHeight);
                    ret2 = fplib.GetNumOfMinutiae(SGFDxTemplateFormat.TEMPLATE_FORMAT_SG400, vrfMin, numOfMinutiae);

                    if ((quality[0] >= MINIMUM_QUALITY) && (nfiqvalue <= MAXIMUM_NFIQ) && (numOfMinutiae[0] >= MINIMUM_NUM_MINUTIAE))
                    {
                        this.jLabelStatus.setText("Verification Capture PASS QC. Quality[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                        v1Captured = true;
                        this.enableRegisterAndVerifyControls();
                    }
                    else
                    {
                        this.jLabelStatus.setText("Verification Capture FAIL QC. Quality[" + quality[0] + "] NFIQ[" + nfiqvalue + "] Minutiae[" + numOfMinutiae[0] + "]");
                        this.jButtonVerify.setEnabled(false);
                    }
                }
                else
                this.jLabelStatus.setText("CreateTemplate() Error : " + iError);
            }
        }
        else
        this.jLabelStatus.setText("GetImageEx() Error : " + iError);
    }//GEN-LAST:event_jButtonCaptureV1ActionPerformed

    private void jButtonVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerifyActionPerformed
        long iError;
        long secuLevel = (long) (this.jComboBoxVerifySecurityLevel.getSelectedIndex() + 1);
        boolean[] matched = new boolean[1];
        int id = 0;
        matched[0] = false;

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select id_cliente, huella_id from clientes ");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                m = rs.getBytes("huella_id");
                iError = fplib.MatchTemplate(m, vrfMin, secuLevel, matched);

                if (iError == SGFDxErrorCode.SGFDX_ERROR_NONE){
                    if (matched[0]){

                        this.jLabelStatus.setText( "Verification Success (1st template)");
                        id = rs.getInt("id_cliente");

                        pst = cn.prepareStatement("select * from clientes where id_cliente = ?");
                        pst.setInt(1, id);
                        rs = pst.executeQuery();
                        if (rs.next())
                        System.out.println(rs.getString("nombre_cliente"));
                        matched[0] = false;
                        break;
                    } else {

                    }
                } else {
                    System.out.println("iError");
                }

            }

        } catch (SQLException e) {
            System.err.println("Error en el llenado de la tabla.");
        }

    }//GEN-LAST:event_jButtonVerifyActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        fplib.CloseDevice();
        fplib.Close();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCaptureR1;
    private javax.swing.JButton jButtonCaptureR2;
    private javax.swing.JButton jButtonCaptureV1;
    private javax.swing.JButton jButtonRegister;
    private javax.swing.JButton jButtonVerify;
    private javax.swing.JComboBox jComboBoxRegisterSecurityLevel;
    private javax.swing.JComboBox jComboBoxVerifySecurityLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelRegisterImage1;
    private javax.swing.JLabel jLabelRegisterImage2;
    private javax.swing.JLabel jLabelRegistrationBox;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelVerificationBox;
    private javax.swing.JLabel jLabelVerifyImage;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JProgressBar jProgressBarR1;
    private javax.swing.JProgressBar jProgressBarR2;
    private javax.swing.JProgressBar jProgressBarV1;
    private javax.swing.JSlider jSliderQuality;
    private javax.swing.JSlider jSliderSeconds;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables

    public void Limpiar(){
        txt_nombre.setText("");
        txt_mail.setText("");
        txt_telefono.setText("");
        txt_direccion.setText("");
    }
}
